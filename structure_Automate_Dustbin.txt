ðŸ“‚ automated_dustbin/         # Root directory
â”‚â”€â”€ ðŸ“‚ src/                   # Source code folder
â”‚   â”‚â”€â”€ ðŸ“‚ components/        # Core ML/DL components
â”‚   â”‚   â”‚â”€â”€ data_ingestion.py       # Fetches data from sensors, camera, APIs, or DB
â”‚   â”‚   â”‚â”€â”€ data_preprocessing.py   # Cleans and preprocesses images/videos
â”‚   â”‚   â”‚â”€â”€ model_training.py       # Trains YOLO and KNN models for detection & classification
â”‚   â”‚   â”‚â”€â”€ model_evaluation.py     # Evaluates models (mAP, precision, recall)
â”‚   â”‚   â”‚â”€â”€ model_prediction.py     # Performs real-time detection and classification
â”‚   â”‚   â”‚â”€â”€ model_registry.py       # Stores trained models for version control
â”‚   â”‚   â”‚â”€â”€ model_monitoring.py     # Monitors model drift and accuracy in real-time
â”‚   â”‚   â”‚â”€â”€ model_retraining.py     # Retrains models when performance drops
â”‚   â”‚â”€â”€ ðŸ“‚ pipelines/         # ML/DL pipelines
â”‚   â”‚   â”‚â”€â”€ training_pipeline.py    # Full pipeline from data ingestion to model training
â”‚   â”‚   â”‚â”€â”€ prediction_pipeline.py  # Real-time inference pipeline
â”‚   â”‚   â”‚â”€â”€ monitoring_pipeline.py  # Logs detection performance and sends alerts
â”‚   â”‚   â”‚â”€â”€ retraining_pipeline.py  # Retrains the model when drift is detected
â”‚   â”‚â”€â”€ ðŸ“‚ config/            # Configuration settings
â”‚   â”‚   â”‚â”€â”€ model_config.yaml       # YOLO hyperparameters, KNN settings
â”‚   â”‚   â”‚â”€â”€ db_config.yaml          # Database config (MongoDB/PostgreSQL)
â”‚   â”‚   â”‚â”€â”€ hyperparameters.yaml    # Tuning parameters for models
â”‚   â”‚â”€â”€ ðŸ“‚ utils/             # Helper functions
â”‚   â”‚   â”‚â”€â”€ logger.py              # Custom logging utility
â”‚   â”‚   â”‚â”€â”€ config_utils.py         # Reads YAML/JSON config files
â”‚   â”‚   â”‚â”€â”€ file_utils.py           # Handles dataset loading/saving
â”‚â”€â”€ ðŸ“‚ data/                  # Dataset storage
â”‚   â”‚â”€â”€ raw/                  # Raw images, sensor data, videos
â”‚   â”‚â”€â”€ processed/            # Preprocessed images & structured datasets
â”‚â”€â”€ ðŸ“‚ notebooks/             # Jupyter Notebooks for EDA and experiments
â”‚â”€â”€ ðŸ“‚ artifacts/             # Stores trained models and logs
â”‚   â”‚â”€â”€ trained_yolo_model.pt        # YOLOv8 trained model weights
â”‚   â”‚â”€â”€ trained_knn_model.pkl        # KNN trained model
â”‚   â”‚â”€â”€ logs/                        # Logs for training & inference
â”‚â”€â”€ ðŸ“‚ logs/                  # Logs directory for debugging
â”‚   â”‚â”€â”€ model_training_logs/         # Logs for training runs
â”‚   â”‚â”€â”€ detection_logs/               # Logs for object detection
â”‚â”€â”€ ðŸ“‚ tests/                 # Unit tests for modules
â”‚   â”‚â”€â”€ test_data_ingestion.py      # Tests data ingestion logic
â”‚   â”‚â”€â”€ test_model_training.py      # Tests training pipeline
â”‚   â”‚â”€â”€ test_model_monitoring.py    # Tests monitoring & alerting system
â”‚â”€â”€ ðŸ“‚ deployment/            # Deployment setup
â”‚   â”‚â”€â”€ Dockerfile            # Containerizes the application
â”‚   â”‚â”€â”€ requirements.txt      # Dependencies list (FastAPI, YOLO, OpenCV)
â”‚   â”‚â”€â”€ app.py                # FastAPI app for serving real-time inference
â”‚   â”‚â”€â”€ ðŸ“‚ ci_cd/             # CI/CD pipeline
â”‚   â”‚   â”‚â”€â”€ github_actions.yaml     # GitHub Actions for automated deployment
â”‚â”€â”€ ðŸ“‚ venv/                  # Virtual environment
â”‚â”€â”€ README.md                 # Project documentation
â”‚â”€â”€ setup.py                  # Python package setup
â”‚â”€â”€ .gitignore                # Ignore unnecessary files
â”‚â”€â”€ .env                      # Environment variables (API keys, DB credentials)
